//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdventureWorksModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class AWEntities : DbContext
    {
        public AWEntities()
            : base("name=AWEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Address> Addresses { get; set; }
        public DbSet<Customer> Customers { get; set; }
        public DbSet<CustomerAddress> CustomerAddresses { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<ProductCategory> ProductCategories { get; set; }
        public DbSet<ProductDescription> ProductDescriptions { get; set; }
        public DbSet<ProductModel> ProductModels { get; set; }
        public DbSet<ProductModelProductDescription> ProductModelProductDescriptions { get; set; }
        public DbSet<SalesOrderDetail> SalesOrderDetails { get; set; }
        public DbSet<SalesOrderHeader> SalesOrderHeaders { get; set; }
        public DbSet<SalesOrderHeaderShipping> SalesOrderHeaderShippings { get; set; }
        public DbSet<SomeNewTable> SomeNewTables { get; set; }
        public DbSet<CustomerView> CustomerViews { get; set; }
        public DbSet<vGetAllCategory> vGetAllCategories { get; set; }
        public DbSet<vProductAndDescription> vProductAndDescriptions { get; set; }
        public DbSet<vProductModelCatalogDescription> vProductModelCatalogDescriptions { get; set; }
        public DbSet<TestTable> TestTables { get; set; }
    
        [EdmFunction("AWEntities", "GetAllCategoriesTrimmed")]
        public virtual IQueryable<CategoryTrimmed> GetAllCategoriesTrimmed()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CategoryTrimmed>("[AWEntities].[GetAllCategoriesTrimmed]()");
        }
    
        [EdmFunction("AWEntities", "ufnGetCustomerInformation")]
        public virtual IQueryable<ufnGetCustomerInformation_Result> ufnGetCustomerInformation(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufnGetCustomerInformation_Result>("[AWEntities].[ufnGetCustomerInformation](@CustomerID)", customerIDParameter);
        }
    
        public virtual ObjectResult<AnnualCustomerSales_Result> AnnualCustomerSales(string fiscalyear)
        {
            var fiscalyearParameter = fiscalyear != null ?
                new ObjectParameter("fiscalyear", fiscalyear) :
                new ObjectParameter("fiscalyear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AnnualCustomerSales_Result>("AnnualCustomerSales", fiscalyearParameter);
        }
    
        public virtual ObjectResult<CustomerOrders_Result> CustomerOrders(Nullable<int> custid)
        {
            var custidParameter = custid.HasValue ?
                new ObjectParameter("custid", custid) :
                new ObjectParameter("custid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerOrders_Result>("CustomerOrders", custidParameter);
        }
    
        public virtual ObjectResult<SalesOrderDetail> OrderDetails(Nullable<int> orderid)
        {
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesOrderDetail>("OrderDetails", orderidParameter);
        }
    
        public virtual ObjectResult<SalesOrderDetail> OrderDetails(Nullable<int> orderid, MergeOption mergeOption)
        {
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesOrderDetail>("OrderDetails", mergeOption, orderidParameter);
        }
    
        public virtual ObjectResult<OrderDetailsPaging_Result> OrderDetailsPaging(Nullable<int> orderid, Nullable<int> startRowIndex, Nullable<int> maxRows, ObjectParameter totalRows)
        {
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(int));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var maxRowsParameter = maxRows.HasValue ?
                new ObjectParameter("MaxRows", maxRows) :
                new ObjectParameter("MaxRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderDetailsPaging_Result>("OrderDetailsPaging", orderidParameter, startRowIndexParameter, maxRowsParameter, totalRows);
        }
    }
}
