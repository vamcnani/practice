<project name="tSQLt.sourceforge" default="all">

 <target name="all"         depends="build.and.extract.package, db.recreate, install, execute.tests"/>
 <target name="all2008"     depends="build.and.extract.package, db.recreate, install.2008, execute.tests"/>
 <target name="refresh"     depends="build.and.extract.package, install"/>
 <target name="refresh2008" depends="build.and.extract.package, install.2008"/>

 <target name="build.and.extract.package" depends="init, clr.compile, package.SQLPromptSnippets.copy, package.files.copy, package.construct.tsqlt, set.build.version, package.example, package.create, clr.testutil.compile, package.extract"/>
 <target name="install" depends="db.install.schema, db.install.testutil, db.install.tests"/>
 <target name="install.2008" depends="install, db.install.2008.tests"/>
 <target name="execute.tests" depends="db.tests.run, db.tests.output, db.tests.check.results, execute.example.tests"/>

 <target name="init">
		<delete dir="output"/>
		<delete dir="test"/>
  <delete dir="temp"/>
  <mkdir dir="temp"/>
  <mkdir dir="output"/>
  <mkdir dir="output/SQLPromptSnippets"/>
  <mkdir dir="test"/>
		<mkdir dir="test/results"/>
 </target>

 <target name="clr.testutil.compile">
  <echo message="Compile CLR Command: ${msbuild.path}msbuild.exe tSQLtTestUtilCLR.csproj /p:Configuration=CruiseControl /nologo"/>
  <exec executable="cmd" dir="../tSQLtCLR/tSQLtTestUtilCLR/" failonerror="true">
   <arg value="/c"/>
   <arg value="${msbuild.path}msbuild.exe tSQLtTestUtilCLR.csproj /p:Configuration=CruiseControl /nologo"/>
  </exec>
 </target>

 <target name="clr.compile">
  <echo message="Compile CLR Command: ${msbuild.path}msbuild.exe tSQLtCLR.csproj /p:Configuration=CruiseControl /nologo"/>
  <exec executable="cmd" dir="../tSQLtCLR/tSQLtCLR/" failonerror="true">
   <arg value="/c"/>
   <arg value="${msbuild.path}msbuild.exe tSQLtCLR.csproj /p:Configuration=CruiseControl /nologo"/>
  </exec>

  <exec executable="cmd" dir="." failonerror="true" outputproperty="clr.version">
   <arg value="/c"/>
   <arg value="cscript //nologo VersionInfo.vbs ../tSQLtCLR/tSQLtCLR/bin/CruiseControl/tSQLtCLR.dll"/>
  </exec>

  <echo message="CLR Version is: ${clr.version}"/>
	</target>

 <target name="package.files.copy">
  <copy file="../Source/SetClrEnabled.sql" todir="output"/>
  <copy file="ReleaseNotes.txt" todir="output"/>
  <copy file="License.txt" todir="output"/>
 </target>

 <target name="package.SQLPromptSnippets.copy">
  <copy todir="output/SQLPromptSnippets">
   <fileset dir="../Snippets">
    <filename name="**/*.sqlpromptsnippet" />
   </fileset>
   <fileset file="../Snippets/ReadMe.txt" />
  </copy>
 </target>

 <target name="package.construct.tsqlt">
  <exec executable="cmd" failonerror="true" output="temp/CreateAssembly.sql">
   <arg value="/c"/>
   <arg value="CreateAssemblyGenerator.exe tSQLtCLR dbo ../tSQLtCLR/tSQLtCLR/bin/CruiseControl/tSQLtCLR.dll EXTERNAL_ACCESS"/>
  </exec>

  <exec executable="cmd" dir="." failonerror="true">
   <arg value="/c"/>
   <arg value="BuildHelper.exe"/>
   <arg value="../Source/BuildOrder.txt"/>
   <arg value="output/tSQLt.class.sql"/>
  </exec>
	</target>

 <target name="set.build.version">
  <replace file="output/ReleaseNotes.txt" token="LATEST-BUILD-NUMBER" value="${clr.version}"/>
  <replace file="output/tSQLt.class.sql" token="$LATEST-BUILD-NUMBER$" value="${clr.version}"/>
 </target>

 <target name="package.example">
  <concat destfile="output/Example.sql" append="yes" fixlastline="yes" eol="crlf">
   <filelist dir="../Examples" files="CreateDatabase.sql"/>
   <filelist dir="output" files="tSQLt.class.sql"/>
   <filelist dir="../Examples" files="Source.sql"/>
   <filelist dir="../Examples" files="Tests.sql"/>
  </concat>
 </target>

 <target name="package.create">
  <zip destfile="output/tSQLtSnippets(SQLPrompt).zip">
   <fileset dir="output/SQLPromptSnippets"/>
  </zip>
  <zip destfile="output/tSQLt.zip">
   <fileset file="output/ReleaseNotes.txt"/>
   <fileset file="output/License.txt"/>
   <fileset file="output/tSQLt.class.sql"/>
   <fileset file="output/SetClrEnabled.sql"/>
   <fileset file="output/Example.sql"/>
  </zip>
  <copy file="output/ReleaseNotes.txt" tofile="output/ReadMe.txt"/>
  <delete dir="output/SQLPromptSnippets"/>
  <delete>
   <fileset dir="output">
    <not>
     <filename name="*.zip" />
    </not>
    <not>
     <filename name="ReadMe.txt" />
    </not>
   </fileset>
  </delete>
	</target>

	<target name="package.extract">
		<unzip src="output/tSQLt.zip" dest="test"/>

  <exec executable="cmd" failonerror="true" output="temp/CreateTestUtilAssembly.sql">
   <arg value="/c"/>
   <arg value="CreateAssemblyGenerator.exe tSQLtTestUtilCLR dbo ../tSQLtCLR/tSQLtTestUtilCLR/bin/CruiseControl/tSQLtTestUtilCLR.dll EXTERNAL_ACCESS"/>
  </exec>

  <exec executable="cmd" dir="." failonerror="true">
   <arg value="/c"/>
   <arg value="BuildHelper.exe"/>
   <arg value="../TestUtil/BuildOrder.txt"/>
   <arg value="test/TestUtil.sql"/>
  </exec>

  <exec executable="cmd" dir="." failonerror="true">
   <arg value="/c"/>
   <arg value="BuildHelper.exe"/>
   <arg value="../Tests/*.class.sql"/>
   <arg value="test/AllTests.sql"/>
  </exec>

  <exec executable="cmd" dir="." failonerror="true">
   <arg value="/c"/>
   <arg value="BuildHelper.exe"/>
   <arg value="../Tests.2008/*.class.sql"/>
   <arg value="test/AllTests.2008.sql"/>
  </exec>


  <concat destfile="test/CreateBuildDb.sql" append="no" fixlastline="yes" eol="crlf">
   <filelist dir="." files="ExecuteAsSa.sql"/>
   <filelist dir="." files="CreateBuildDb.sql"/>
  </concat>

  <copy file="../Tests/BootStrapTest.sql" todir="test"/>
		<copy file="GetTestResults.sql" todir="test"/>		
	</target>

	<target name="db.recreate">
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
			<arg value="sqlcmd -S ${db.server} -d master -E -I -i &quot;test/CreateBuildDb.sql&quot; -v DbName=${db.name} -V11"/>
		</exec>
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
			<arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;test/SetClrEnabled.sql&quot; -V11"/>
		</exec>
	</target>

	<target name="db.install.schema">
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
			<arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;test/tSQLt.class.sql&quot; -V11"/>
		</exec>
	</target>

 <target name="db.install.testutil">
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;test/TestUtil.sql&quot; -V11"/>
  </exec>
 </target>

 <target name="db.install.tests">
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;test/AllTests.sql&quot; -V11"/>
  </exec>
 </target>

 <target name="db.install.2008.tests">
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;test/AllTests.2008.sql&quot; -V11"/>
  </exec>
 </target>

 <target name="db.tests.run">
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;test/BootStrapTest.sql&quot; -V11"/>
  </exec>
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -Q &quot;EXEC tSQLt.RunAll;&quot;"/>
  </exec>
 </target>

	<target name="db.tests.output">
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
			<arg value="sqlcmd -S ${db.server} -d ${db.name} -h-1 -y0 -E -I -i &quot;test/GetTestResults.sql&quot; -o &quot;test/results/TestResults.xml&quot; -V11"/>
		</exec>
	</target>

	<target name="db.tests.check.results">
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
			<arg value="sqlcmd  -S ${db.server} -d ${db.name} -h-1 -y0 -E -I -Q &quot;:EXIT(SELECT COUNT(*) FROM tSQLt.TestResult WHERE Result != 'Success')&quot; -V11"/>
		</exec>
	</target>

 <target name="execute.example.tests" depends="create.example.database,db.example.tests.create,db.example.tests.run,db.example.tests.output,db.example.tests.check.results"/>

 <target name="create.example.database">
  <concat destfile="test/ExampleToRun.sql" append="yes" fixlastline="yes" eol="crlf">
   <filelist dir="." files="ExecuteAsSa.sql"/>
   <filelist dir="test" files="Example.sql"/>
  </concat>

  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;test/ExampleToRun.sql&quot; -V11"/>
  </exec>
 </target>

 

 <target name="db.example.tests.create">
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d tSQLt_Example -E -I -i &quot;../Examples/TestThatExamplesAreDeployed.sql&quot; -V11"/>
  </exec>
 </target>

 <target name="db.example.tests.run">
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d tSQLt_Example -E -I -Q &quot;EXEC tSQLt.Run 'ExampleDeployed';&quot;"/>
  </exec>
 </target>

 <target name="db.example.tests.output">
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d tSQLt_Example -h-1 -y0 -E -I -i &quot;test/GetTestResults.sql&quot; -o &quot;test/results/ExampleTestResults.xml&quot; -V11"/>
  </exec>
 </target>

 <target name="db.example.tests.check.results">
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd  -S ${db.server} -d tSQLt_Example -h-1 -y0 -E -I -Q &quot;:EXIT(SELECT COUNT(*) FROM tSQLt.TestResult WHERE Result != 'Success')&quot; -V11"/>
  </exec>
 </target>


</project>